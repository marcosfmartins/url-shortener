services:
  mongo:
    image: mongo:8.0
    profiles:
      - local
      - test

  redis:
    image: redis:latest
    profiles:
      - local
      - test

  kafka:
    image: confluentinc/cp-kafka:7.9.2
    environment:
      CLUSTER_ID: 1
      KAFKA_NODE_ID: 1
      KAFKA_PROCESS_ROLES: broker,controller
      KAFKA_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://0.0.0.0:9092,CONTROLLER://kafka:9093
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,CONTROLLER:PLAINTEXT
      KAFKA_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    profiles:
      - local
      - test

  app:
    build:
      context: .
      dockerfile: Dockerfile
      target: image
    ports:
      - "8080:8080"
    depends_on:
      - mongo
      - redis
      - kafka
    environment:
      SERVER_PORT: 8080
      MONGO_URL: mongodb://mongo:27017/url_shortener
      REDIS_URL: redis://redis:6379
      KAFKA_BROKER: kafka:29092
    profiles:
      - local

  test:
    build:
      context: .
      dockerfile: Dockerfile
      target: base
    command: ["go", "test", "-v", "-failfast", "-coverprofile=coverage/coverage.out", "-covermode=set", "./..."]
    volumes:
      - .:/app
    depends_on:
      - mongo
      - redis
      - kafka
    environment:
      SERVER_PORT: 8080
      MONGO_URL: mongodb://mongo:27017/url_shortener_test
      REDIS_URL: redis:6379
      KAFKA_BROKER: kafka:29092
    profiles:
      - test
